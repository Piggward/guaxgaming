[gd_scene load_steps=19 format=3 uid="uid://bxtrgmcftymij"]

[ext_resource type="PackedScene" uid="uid://kbkxkn8p4yjl" path="res://scenes/scene_templates/ally_template.tscn" id="1_vqdik"]
[ext_resource type="Script" path="res://resources/upgrades/upgrade.gd" id="2_4c2nq"]
[ext_resource type="Script" path="res://resources/base_attributes/base_attributes.gd" id="4_pyq4m"]
[ext_resource type="Resource" uid="uid://cmwaxf8250lph" path="res://scenes/allies/footman/Barbarian/attack_barbarian.tres" id="5_868p8"]
[ext_resource type="Script" path="res://resources/attacks/attack.gd" id="5_bkwgr"]
[ext_resource type="Texture2D" uid="uid://12lf0mg7wtd3" path="res://art/kenney_scribble-dungeons/PNG/Default (64px)/Characters/green_hand.png" id="7_kd4b4"]
[ext_resource type="Texture2D" uid="uid://b7u7qy3c1y0pk" path="res://art/kenney_scribble-dungeons/PNG/Default (64px)/Items/weapon_axe_large.png" id="8_agquh"]
[ext_resource type="Script" path="res://scripts/npc_states/ally_states/basic_idle_state.gd" id="9_bklxo"]
[ext_resource type="Script" path="res://scripts/npc_states/ally_states/basic_hunting_state.gd" id="10_2kh11"]
[ext_resource type="Script" path="res://scripts/npc_states/ally_states/basic_attacking_state.gd" id="11_rbeww"]
[ext_resource type="Texture2D" uid="uid://djcd0mj85g3d7" path="res://art/AI_test/Barbarian ai.png" id="14_th7nl"]

[sub_resource type="Resource" id="Resource_yruvk"]
script = ExtResource("2_4c2nq")
cost = 50
bonus_health = 50
bonus_damage = 100
bonus_range = 0.0
bonus_attack_speed = -1.0

[sub_resource type="Resource" id="Resource_tkaqx"]
script = ExtResource("4_pyq4m")
title = "Barbarian"
maxHealth = 30
attackspeed = 30
speed = 30
base_attack = ExtResource("5_868p8")
special_attacks = Array[ExtResource("5_bkwgr")]([])

[sub_resource type="Animation" id="Animation_0ebak"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Root/Character Sprite/Hand left:rotation")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [1.86696]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Root/Character Sprite/Hand left:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(34, 12)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Root/Character Sprite/Hand right:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector2(-33, 10)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_886hd"]
_data = {
"RESET": SubResource("Animation_0ebak")
}

[sub_resource type="Animation" id="Animation_3jamm"]
resource_name = "Attack_melee_1"
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Root/Character Sprite/Hand right:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.2, 0.333333, 0.4, 0.7),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(-1.53957, 39.9704), Vector2(-22.3986, 21.6809), Vector2(5.6432, 57.0665), Vector2(37.3779, 22.023), Vector2(-4.40632, 38.0564)]
}
tracks/1/type = "method"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("StateMachine/BasicAttackingState")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0.3),
"transitions": PackedFloat32Array(1),
"values": [{
"args": [],
"method": &"on_hit"
}]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Root/Character Sprite/Hand left:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.2, 0.333333, 0.4, 0.566667, 0.7),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 0,
"values": [Vector2(15.7558, 32.6306), Vector2(-9.97698, 30.0006), Vector2(4.25124, 42.3105), Vector2(23.4875, 26.3888), Vector2(19.9874, 15.4722), Vector2(15.7558, 32.6306)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Root/Character Sprite/Hand left:rotation")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.2, 0.333333, 0.4, 0.7),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 0,
"values": [2.38252, 3.35245, 1.08583, -0.563827, 2.38252]
}

[sub_resource type="Animation" id="Animation_ivckp"]
resource_name = "Idle"
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Root/Character Sprite:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.5, 1),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(1, 1), Vector2(1.035, 1.035), Vector2(1, 1)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Root/Character Sprite/Hand right:position")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0, 0.5, 1),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(-1.53957, 39.9704), Vector2(-3.19531, 32.7515), Vector2(-1.53957, 39.9704)]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("Root/Character Sprite/Hand left:position")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0, 0.5, 1),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Vector2(15.7558, 32.6306), Vector2(14.4062, 27.6281), Vector2(15.7558, 32.6306)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Root/Character Sprite/Hand left:rotation")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0, 0.5, 1),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [2.38252, 2.41238, 2.38252]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_ljcjm"]
_data = {
"Attack1": SubResource("Animation_3jamm"),
"Idle": SubResource("Animation_ivckp")
}

[node name="Barbarian" instance=ExtResource("1_vqdik")]
rotation = -0.111155
cost = 50
upgrade = SubResource("Resource_yruvk")
base_attributes = SubResource("Resource_tkaqx")

[node name="Root" parent="." index="4"]
rotation = -1.49814

[node name="Character Sprite" type="Sprite2D" parent="Root" index="0"]
scale = Vector2(1.021, 1.021)
texture = ExtResource("14_th7nl")

[node name="Hand right" type="Sprite2D" parent="Root/Character Sprite" index="0"]
position = Vector2(-33, 10)
rotation = 0.00447598
texture = ExtResource("7_kd4b4")

[node name="Hand left" type="Sprite2D" parent="Root/Character Sprite" index="1"]
position = Vector2(34, 12)
rotation = 1.86696
texture = ExtResource("7_kd4b4")

[node name="Sword" type="Sprite2D" parent="Root/Character Sprite/Hand left" index="0"]
modulate = Color(0.564962, 0.564962, 0.564962, 1)
position = Vector2(20.4246, 9.54718)
rotation = 2.16162
texture = ExtResource("8_agquh")

[node name="StateMachine" parent="." index="5" node_paths=PackedStringArray("initial_state")]
initial_state = NodePath("BasicIdleState")

[node name="BasicIdleState" type="Node" parent="StateMachine" index="0"]
script = ExtResource("9_bklxo")

[node name="BasicHuntingState" type="Node" parent="StateMachine" index="1"]
script = ExtResource("10_2kh11")
state = 1

[node name="BasicAttackingState" type="Node" parent="StateMachine" index="2"]
script = ExtResource("11_rbeww")
state = 2

[node name="OutOfBattleStateMachine" parent="." index="6" node_paths=PackedStringArray("initial_state")]
initial_state = NodePath("ShopDisplayState")

[node name="AnimationPlayer" parent="." index="7"]
libraries = {
"": SubResource("AnimationLibrary_886hd"),
"Barbarian": SubResource("AnimationLibrary_ljcjm")
}

[connection signal="input_event" from="." to="." method="_on_input_event"]
[connection signal="mouse_entered" from="." to="." method="_on_mouse_entered"]
